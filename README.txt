개발자 티셔츠 쇼핑몰 오픈소식
2번째 커밋

개발자 목록 // 문어작성
1. 고양이
2. 문어 

git 정리
0강
    로컬 저장소 commit 명령어
    1. git add %파일명%
    2. git commit -m %메세지 입력%

    원격 저장소 추가(원격 저장소와 로컬 저장소 연결)
    git remote add origin %git주소 입력%

    로컬 저장소 커밋을 원격 저장소에 올리는 명령어
    git push origin master

    원격 저장소 커밋을 로컬 저장소로 내려받는 명령어
    git clone %git clone 주소입력%

    원격 저장소의 새로운 커밋을 로컬 저장소에 갱신하기(update 받기)
    git pull origin master

    커밋 로그 보기
    git log

1강 GUI사용하여 git 사용
    sourcetree 설치

    visual Studio Code 설치

2강 혼자서 git으로 버전관리하기 - GUI실제 사용 버전관리
    sourcetree에서 커밋하는 방법
    1. sourcetree 왼쪽 리스트 중 파일 상태의 스테이지에 올라가지 않은 파일을 확인(변경하는 파일) 후 해당 파일을 오른쪽 (+) 버튼을 누른다.
    2. (+)버튼을 눌러 스테이지에 올라간 파일을 확인한다.(cli의 git add 부분)
    3. 하단에 커밋 메세지를 입력 한 후 커밋버튼을 누른다.(cli의 git commit 부분)
    4. 왼쪽 리스트 중 history를 선택 한 후 커밋된 내용을 확인한다.(cli의 git log 부분)

    sourcetree에서 푸시하는 방법
    1. 상단의 Push 버튼을 클릭한다.
    2. 나온 창에서 master브랜치의 왼쪽 체크박스를 체크 후 하단 Push버튼을 클릭한다.

    visual Studio Code 사용하여 문서 편집, 생성하기.

    git의 4가지 상태
    1. 로컬에서 신규파일을 생성 하였지만 스테이지로 올리지 않은 상태 -> 추적안됨(untracked)
    2. 신규파일, 기존파일 수정한 내용을 git add나 sourcetree의 (+) 버튼을 통해 스테이지로 올린 상태 -> 스테이지됨(staged)
    3. 스테이지에 올린 신규파일을 git commit이나 sourcetree의 커밋 버튼을 통해 올려 파일이 commit에 올려진 상태 -> 수정없음(unmodified)
    4. 추적이 되는 파일을 로컬에서 수정한 상태 -> 수정함(modified)

3강 여러명이 함께 git으로 협업 하기 - 브랜치 실습
    브랜치 생성
    1. sourcetree 상단의 브랜치 버튼을 클릭한다.
    2. 새 브랜치 경로를 설정하여 브랜치를 생성한다.
    3. 새 브랜치 경로를 더블클릭하여 체크아웃하거나, 경로에서 마우스 우클릭 > 체크아웃 선택하여 해당 브랜치로 이동한다.
    4. 해당하는 브랜치에서 개발 및 문서 수정을 진행하여 커밋하면 history에 master브랜치와 다르게 해당하는 브랜치가 이동하는 것을 볼 수 있다.
    ※ 1) 브랜치 경로 설정 시 /를 이용하면 폴더 형태로 구분해준다. 2) 체크아웃 : 브랜치 이동하기, 

    브랜치 합치기(merge)
    병합의 내용 3가지
    병합 커밋(Merge commit) : 서로 다른 부분 수정을 진행한 브랜치를 병합
    빨리 감기(Fast-forward) : 한 브랜치만 수정을 진행하여 브랜치를 병합
    충돌 (Conflict) : 서로 같은 부분을 수정하여 브랜치를 병합해 충돌이 생기는 상태, 수동으로 남길 부분을 확인하여 선택한다.
    1. master 브랜치에서 history브랜치중 병합을 원하는 브랜치의 커밋된 내용에 마우스 우클릭 > 병합을 누른다.
        또는 좌측 사이드바에서 원하는 브랜치에서 마우스 우클릭 > 현재 브랜치로 '해당하는 브랜치 명' 병합을 누른다.
    ※ 커밋만 진행된 상태기 때문에 푸시를 따로 해주어야 한다. 병합은 원하는 브랜치를 기준으로 가능하다.

    충돌(conflict) 해결하기
    1. 병합시 충돌 메세지가 나오며 충돌에 해당하는 파일이 스테이지에 올라가지 않은 파일로 표시된다.
    2. 해당하는 파일을 확인하여 충돌된 내용을 변경하여 다시 커밋을 진행한다.
    3. 커밋이 완료되었으면 다시 병합을 진행한다.

    예의바른 브랜치 합치기 - 풀 리퀘스트(Pull request)
    병합시 풀 리퀘스트 버튼을 누르면 다른 브랜치의 사용자에게 병합을 요청하는 메세지를 자동으로 생성하여 보내준다.
    1. 브랜치에서 코드를 푸시한 뒤 github의 원격저장소를 들어가면 푸시한 브랜치의 내용이 나오면서 [compare & pull request] 버튼이 보인다. 해당버튼 클릭
    2. 먼저 base 브랜치와 compare 브랜치를 선택해야하는데 base 브랜치는 병합 결과물이 올라갈 기준이 되는 브랜치, compare 브랜치는 기준과 비교 대상이 되는 브랜치다.
    3. 브랜치 선택과 요청에 대한 내용을 입력 후(제목, 내용, Reviewers, Lavels 등) Create pull request버튼을 클릭한다.
    4. 요청 받은 사람은 github의 Pull request 내용을 확인 한 후 병합(Merge Pull request)을 선택 한 뒤 Confirm merge를 선택한다.
    5. 풀 리퀘스트가 close 되었다는 메세지가 뜨며 완료되고, 완료된 풀 리퀘스트는 [Pull request] 탭의 [Closed]에서 확인 가능하다.
    6. 소스트리에선 해당 상태를 바로 확인 할 수 없으며, 상단의 패치버튼 클릭 > 모든 원격 저장소에서 가져오기를 확인하여 해당 상태를 가져온다
    7. 로컬의 master 브랜치에서 해당 내용을 받아오기 위해 상단의 Pull 버튼을 눌러 원격 저장소에서 가져온다(Update)
    ※ 풀 리퀘스트는 수락(Accept), 수정을 요청(Request change), 병합(Merge Pull request) 할 수 있다.

    개발 완료 후 출시 - 릴리즈(release)
    특정 커밋에 태그를 붙여 릴리즈 형태로 만든다.
    1. 소스트리 master 브랜치에서 상단의 태그를 클릭하여 태그 이름 : v1.0.0 형태로 입력 후 하단의 태그추가 버튼을 눌러 태그를 추가한다.
    2. master 브랜치 라벨 옆에 입력 한 태그 이름의 라벨을 확인 한 뒤 상단의 Push를 눌러 태그를 푸쉬해준다.
    3. github의 releases에 있는 tags를 선택해 태그의 내용을 보면 태그가 가르키는 버전을 .zip형태로 다운받을 수 있다.

